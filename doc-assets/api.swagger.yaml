openapi: 3.0.3
info:
  title: API
  version: 1.0.0
servers:
- url: /
paths:
  /v1/companies/{companyId}/locations:
    get:
      operationId: getAllLocationsByCompany
      parameters:
      - explode: false
        in: path
        name: companyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllLocationsByCompanyOutputPayload'
          description: getAllLocationsByCompany 200 response
      tags:
      - LocationAPIController
  /v1/locations:
    get:
      operationId: getAllLocations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllLocationsOutputPayload'
          description: getAllLocations 200 response
      tags:
      - LocationAPIController
    patch:
      operationId: updateLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateLocationResponseContent'
          description: updateLocation 200 response
      tags:
      - LocationAPIController
    post:
      operationId: createLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createLocationResponseContent'
          description: createLocation 200 response
      tags:
      - LocationAPIController
  /v1/locations/{locationId}:
    delete:
      operationId: deleteLocation
      parameters:
      - explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: deleteLocation 204 response
      tags:
      - LocationAPIController
    get:
      operationId: getLocationById
      parameters:
      - explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationByIdResponseContent'
          description: getLocationById 200 response
      tags:
      - LocationAPIController
  /v1/public/helloworld/system/{query}:
    get:
      operationId: helloworldViaSystem
      parameters:
      - explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helloworldViaSystemResponseContent'
          description: helloworldViaSystem 200 response
      tags:
      - ActorSystemAPIController
  /v1/public/helloworld/sharding/{query}:
    get:
      operationId: helloworldViaSharding
      parameters:
      - explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helloworldViaShardingResponseContent'
          description: helloworldViaSharding 200 response
      tags:
      - ActorShardingAPIController
  /v1/companies:
    get:
      operationId: getAllCompanies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllCompaniesOutputPayload'
          description: getAllCompanies 200 response
      tags:
      - CompanyAPIController
    patch:
      operationId: updateCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequestBody'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateCompanyResponseContent'
          description: updateCompany 204 response
      tags:
      - CompanyAPIController
    post:
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createCompanyResponseContent'
          description: createCompany 200 response
      tags:
      - CompanyAPIController
  /v1/companies/{companyId}:
    delete:
      operationId: deleteCompany
      parameters:
      - explode: false
        in: path
        name: companyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: deleteCompany 204 response
      tags:
      - CompanyAPIController
    get:
      operationId: getCompanyById
      parameters:
      - explode: false
        in: path
        name: companyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCompanyByIdResponseContent'
          description: getCompanyById 200 response
      tags:
      - CompanyAPIController
  /:
    get:
      operationId: ping
      responses:
        "200":
          description: ping 200 response
      tags:
      - HealthAPIController
  /liveness:
    get:
      operationId: liveness
      responses:
        "200":
          description: liveness 200 response
      tags:
      - HealthAPIController
  /readiness:
    get:
      operationId: readiness
      responses:
        "200":
          description: readiness 200 response
      tags:
      - HealthAPIController
components:
  schemas:
    LocationRequestBody:
      example:
        zip: zip
        settings: ""
        country: country
        city: city
        name: name
        addressLine1: addressLine1
        company: company
        addressLine2: addressLine2
        id: id
      properties:
        id:
          type: string
        company:
          type: string
        name:
          type: string
        settings: {}
        addressLine1:
          type: string
        addressLine2:
          type: string
        zip:
          type: string
        city:
          type: string
        country:
          type: string
      required:
      - company
      type: object
    LocationResponse:
      example:
        zip: zip
        settings: ""
        country: country
        city: city
        created: created
        name: name
        addressLine1: addressLine1
        company: company
        addressLine2: addressLine2
        id: id
        updated: updated
      properties:
        id:
          type: string
        company:
          type: string
        name:
          type: string
        settings: {}
        addressLine1:
          type: string
        addressLine2:
          type: string
        zip:
          type: string
        city:
          type: string
        country:
          type: string
        created:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
        updated:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
      required:
      - company
      - created
      - id
      - updated
      type: object
    createLocationResponseContent:
      example:
        zip: zip
        settings: ""
        country: country
        city: city
        created: created
        name: name
        addressLine1: addressLine1
        company: company
        addressLine2: addressLine2
        id: id
        updated: updated
      properties:
        id:
          type: string
        company:
          type: string
        name:
          type: string
        settings: {}
        addressLine1:
          type: string
        addressLine2:
          type: string
        zip:
          type: string
        city:
          type: string
        country:
          type: string
        created:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
        updated:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
      required:
      - company
      - created
      - id
      - updated
      type: object
    getAllLocationsByCompanyOutputPayload:
      items:
        $ref: '#/components/schemas/LocationResponse'
      type: array
    getAllLocationsOutputPayload:
      items:
        $ref: '#/components/schemas/LocationResponse'
      type: array
    getLocationByIdResponseContent:
      example:
        zip: zip
        settings: ""
        country: country
        city: city
        created: created
        name: name
        addressLine1: addressLine1
        company: company
        addressLine2: addressLine2
        id: id
        updated: updated
      properties:
        id:
          type: string
        company:
          type: string
        name:
          type: string
        settings: {}
        addressLine1:
          type: string
        addressLine2:
          type: string
        zip:
          type: string
        city:
          type: string
        country:
          type: string
        created:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
        updated:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
      required:
      - company
      - created
      - id
      - updated
      type: object
    updateLocationResponseContent:
      example:
        zip: zip
        settings: ""
        country: country
        city: city
        created: created
        name: name
        addressLine1: addressLine1
        company: company
        addressLine2: addressLine2
        id: id
        updated: updated
      properties:
        id:
          type: string
        company:
          type: string
        name:
          type: string
        settings: {}
        addressLine1:
          type: string
        addressLine2:
          type: string
        zip:
          type: string
        city:
          type: string
        country:
          type: string
        created:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
        updated:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
      required:
      - company
      - created
      - id
      - updated
      type: object
    helloworldViaSystemResponseContent:
      example:
        answer: answer
      properties:
        answer:
          type: string
      required:
      - answer
      type: object
    helloworldViaShardingResponseContent:
      example:
        answer: answer
      properties:
        answer:
          type: string
      required:
      - answer
      type: object
    CompanyRequestBody:
      example:
        settings: ""
        booleanAttribute: true
        longAttribute1: 0
        stringAttribute1: stringAttribute1
        id: id
        stringAttribute2: stringAttribute2
      properties:
        id:
          type: string
        settings: {}
        stringAttribute1:
          type: string
        stringAttribute2:
          type: string
        longAttribute1:
          format: int64
          nullable: true
          type: integer
        booleanAttribute:
          nullable: true
          type: boolean
      type: object
    CompanyResponse:
      example:
        settings: ""
        booleanAttribute: true
        created: created
        longAttribute1: 0
        stringAttribute1: stringAttribute1
        id: id
        stringAttribute2: stringAttribute2
        updated: updated
      properties:
        id:
          type: string
        settings: {}
        stringAttribute1:
          type: string
        stringAttribute2:
          type: string
        longAttribute1:
          format: int64
          nullable: true
          type: integer
        booleanAttribute:
          nullable: true
          type: boolean
        created:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
        updated:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
      required:
      - created
      - id
      - updated
      type: object
    createCompanyResponseContent:
      example:
        settings: ""
        booleanAttribute: true
        created: created
        longAttribute1: 0
        stringAttribute1: stringAttribute1
        id: id
        stringAttribute2: stringAttribute2
        updated: updated
      properties:
        id:
          type: string
        settings: {}
        stringAttribute1:
          type: string
        stringAttribute2:
          type: string
        longAttribute1:
          format: int64
          nullable: true
          type: integer
        booleanAttribute:
          nullable: true
          type: boolean
        created:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
        updated:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
      required:
      - created
      - id
      - updated
      type: object
    getAllCompaniesOutputPayload:
      items:
        $ref: '#/components/schemas/CompanyResponse'
      type: array
    getCompanyByIdResponseContent:
      example:
        settings: ""
        booleanAttribute: true
        created: created
        longAttribute1: 0
        stringAttribute1: stringAttribute1
        id: id
        stringAttribute2: stringAttribute2
        updated: updated
      properties:
        id:
          type: string
        settings: {}
        stringAttribute1:
          type: string
        stringAttribute2:
          type: string
        longAttribute1:
          format: int64
          nullable: true
          type: integer
        booleanAttribute:
          nullable: true
          type: boolean
        created:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
        updated:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
      required:
      - created
      - id
      - updated
      type: object
    updateCompanyResponseContent:
      example:
        settings: ""
        booleanAttribute: true
        created: created
        longAttribute1: 0
        stringAttribute1: stringAttribute1
        id: id
        stringAttribute2: stringAttribute2
        updated: updated
      properties:
        id:
          type: string
        settings: {}
        stringAttribute1:
          type: string
        stringAttribute2:
          type: string
        longAttribute1:
          format: int64
          nullable: true
          type: integer
        booleanAttribute:
          nullable: true
          type: boolean
        created:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
        updated:
          description: ISO Date With Time
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\\
            d:\\d\\d)|Z)?$"
          type: string
      required:
      - created
      - id
      - updated
      type: object
