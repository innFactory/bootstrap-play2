bootstrap-play2 {
  profile = "slick.jdbc.PostgresProfile$"
  database = {
    url = "jdbc:postgresql://localhost:5432/test"
    urlPrefix = "jdbc:postgresql://"
    user = "test"
    password = "test"
    host = "localhost"
    port = "5432"
    db = "test"
    host = ${?DATABASE_HOST}
    port = ${?DATABASE_PORT}
    db = ${?DATABASE_DB}
    user = ${?DATABASE_USER}
    password = ${?DATABASE_PASSWORD}
    url = "jdbc:postgresql://"${?bootstrap-play2.database.host}":"${?bootstrap-play2.database.port}"/"${?bootstrap-play2.database.db}
    url =  ${?DATABASE_URL}
    driver = org.postgresql.Driver
    // The number of threads determines how many things you can *run* in parallel
    // the number of connections determines you many things you can *keep in memory* at the same time
    // on the database server.
    // numThreads = (core_count (hyperthreading included))
    numThreads = 20

    // queueSize = ((core_count * 2) + effective_spindle_count)
    // on a MBP 13, this is 2 cores * 2 (hyperthreading not included) + 1 hard disk
    queueSize = 1000

    // https://blog.knoldus.com/2016/01/01/best-practices-for-using-slick-on-production/
    // make larger than numThreads + queueSize
    maxConnections = 20

    connectionTimeout = 7000
    validationTimeout = 7000
  }
}

logger.scala.slick.session=ERROR
logger.scala.slick.basic=ERROR
logger.scala.slick=WARN

# Override default error handler

// ERROR HANDLER

play.http.errorHandler = "common.errorHandling.ErrorHandler"

// FIREBASE

firebase.file = "firebase.json"
firebase.file = ${?FIREBASE_FILEPATH}

// PLAY SECRET

play.http.secret.key = "KE;PMNWm/SGwA?IU=OqznzyyR7hFFpET0:z=rjBl:aI4UY@@Ji_mia/>Ai9@9rRR"
play.http.secret.key = ${?PLAY_HTTP_SECRET_KEY}

// FILTERS


play.filters.enabled = ["common.logging.AccessLoggingFilter", "play.filters.cors.CORSFilter" ]


play.filters.cors {
  pathPrefixes = ["/v1/"]
  allowedOrigins = null
  allowedHttpMethods = ["GET", "POST", "PUT", "PATCH", "DELETE", "HEAD"]
  preflightMaxAge = 3 days
  supportCredentials = true
  exposedHeaders = ["Access-Control-Allow-Origin"]
}

logging.access.statusList = [404,403,401]
logging.access.statusList = ${?LOGGING_STATUSLIST}

firebase.service.apiToken = "8xBOWiQ291nQtNFMmNMhYg4VJkXssupM"
firebase.service.apiToken = ${?FIREBASE_HOOK_API_TOKEN}

http.port = 8080