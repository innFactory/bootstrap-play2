# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

->        /        de.innfactory.smithy4play.AutoRouter

# - - - - - - - - HELLO WORLD ACTOR QUERY - - - - - - - -

###
#  summary: Hello World Actor Query
#  tags:
#    - public
#  parameters:
#    - in: path
#      name: Query
#      schema:
#         type: String
#      required: true
#      description: Query
#  responses:
#     '200':
#       description: Response
#     '404':
#       description: publicMetric not Found
#     '500':
#       description: InternalServerError
###
#GET                 /v1/public/helloworld/:query                       de.innfactory.bootstrapplay2.actorsystem.application.ActorHelloWorldController.helloWorldActor(query: String)

# - - - - - - - - WEBSOCKET - - - - - - - -

###
#  summary: Websocket
#  tags:
#    - public
#  responses:
#     '200':
#       description: Response
###
#GET                 /v1/websocket                                   de.innfactory.bootstrapplay2.websockets.application.WebsocketController.socket

# - - - - - - - - SERVER SENT EVENTS - - - - - - - -

###
#  summary: ServerSentevents
#  tags:
#    - public
#  responses:
#     '200':
#       description: Response
###
#GET                 /v1/serversentevent                             de.innfactory.bootstrapplay2.websockets.application.WebsocketController.serverSentEvents()

# - - - - - - - - PROBES - - - - - - - -

###
#  summary: Health check
#  tags:
#    - probes
#  responses:
#     '200':
#       description: OK
###
#GET                /                                                de.innfactory.bootstrapplay2.application.controller.HealthController.ping

###
#  summary: Liveness check
#  tags:
#    - probes
#  responses:
#     '200':
#       description: OK
###
#GET                /liveness                                        de.innfactory.bootstrapplay2.application.controller.HealthController.ping

###
#  summary: Readiness check
#  tags:
#    - probes
#  responses:
#     '200':
#       description: OK
###
#GET                /readiness                                      de.innfactory.bootstrapplay2.application.controller.HealthController.ping

# - - - - - - - - COMPANIES - - - - - - - -

###
#  summary: Get All Companies
#  tags:
#    - companies
#  responses:
#     '200':
#       description: success
#       schema:
#         $ref: '#/components/schemas/de.innfactory.bootstrapplay2.models.api.Company'
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
###
#GET                 /v1/companies                                     de.innfactory.bootstrapplay2.companies.application.CompanyController.getAllCompaniesAsSource

###
#  summary: Get Single
#  security:
#    - bearerAuth: []
#  tags:
#    - companies
#  parameters:
#    - in: path
#      name: company Id
#      schema:
#         type: Long
#      required: true
#      description: Id of Company
#  responses:
#     '200':
#       description: success
#       schema:
#         $ref: '#/components/schemas/de.innfactory.bootstrapplay2.models.api.Company'
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
###
#GET                 /v1/companies/:id                                    de.innfactory.bootstrapplay2.companies.application.CompanyController.getById(id: Long)

###
#  summary: Delete Company
#  security:
#    - bearerAuth: []
#  tags:
#    - companies
#  parameters:
#    - in: path
#      name: company Id
#      schema:
#         type: Long
#      required: true
#      description: Id of Company
#  responses:
#     '204':
#       description: success
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
###
#DELETE               /v1/companies/:id                                   de.innfactory.bootstrapplay2.companies.application.CompanyController.delete(id: Long)

###
#  summary: Post Company
#  security:
#    - bearerAuth: []
#  tags:
#    - companies
#  parameters:
#    - name: body
#      required: true
#      description: Comapyn JSON Object
#      schema:
#        $ref: '#/components/schemas/de.innfactory.bootstrapplay2.models.api.Company'
#  responses:
#     '204':
#       description: success
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
#     '400':
#       description: bad request
###
#POST               /v1/companies                                   de.innfactory.bootstrapplay2.companies.application.CompanyController.create()

###
#  summary: Patch Company
#  security:
#    - bearerAuth: []
#  tags:
#    - companies
#  parameters:
#    - name: body
#      required: true
#      description: Company JSON Object
#      schema:
#        $ref: '#/components/schemas/de.innfactory.bootstrapplay2.models.api.Company'
#  responses:
#     '204':
#       description: success
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
#     '400':
#       description: bad request
###
#PATCH               /v1/companies                                de.innfactory.bootstrapplay2.companies.application.CompanyController.update()

# - - - - - - - - LOCATIONS - - - - - - - -

###
#  summary: Get by Company
#  security:
#    - bearerAuth: []
#  tags:
#    - locations
#  parameters:
#    - in: path
#      name: company id
#      schema:
#         type: String
#      required: true
#      description: Id of Company
#  responses:
#     '200':
#       description: success
#       schema:
#         $ref: '#/components/schemas/de.innfactory.bootstrapplay2.locations.domain.models.Location'
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
###
#GET                 /v1/companies/:id/locations                                   de.innfactory.bootstrapplay2.locations.application.LocationController.getAllByCompany(id: Long)

###
#  summary: Get Single
#  security:
#    - bearerAuth: []
#  tags:
#    - locations
#  parameters:
#    - in: path
#      name: location Id
#      schema:
#         type: Long
#      required: true
#      description: Id of Locaiton
#  responses:
#     '200':
#       description: success
#       schema:
#         $ref: '#/components/schemas/de.innfactory.bootstrapplay2.locations.domain.models.Location'
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
###
#GET                 /v1/locations/:id                                  de.innfactory.bootstrapplay2.locations.application.LocationController.getById(id: Long)

###
#  summary: Delete Location
#  security:
#    - bearerAuth: []
#  tags:
#    - locations
#  parameters:
#    - in: path
#      name: location Id
#      schema:
#         type: Long
#      required: true
#      description: Id of Location
#  responses:
#     '204':
#       description: success
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
###
#DELETE               /v1/locations/:id                                   de.innfactory.bootstrapplay2.locations.application.LocationController.delete(id: Long)

###
#  summary: Post Location
#  security:
#    - bearerAuth: []
#  tags:
#    - locations
#  parameters:
#    - name: body
#      required: true
#      description: Location JSON Object
#      schema:
#        $ref: '#/components/schemas/de.innfactory.bootstrapplay2.locations.domain.models.Location'
#  responses:
#     '204':
#       description: success
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
#     '400':
#       description: bad request
###
#POST               /v1/locations                                 de.innfactory.bootstrapplay2.locations.application.LocationController.create()

###
#  summary: Patch Location
#  security:
#    - bearerAuth: []
#  tags:
#    - locations
#  parameters:
#    - name: body
#      required: true
#      description: Location JSON Object
#      schema:
#        $ref: '#/components/schemas/de.innfactory.bootstrapplay2.locations.domain.models.Location'
#  responses:
#     '204':
#       description: success
#     '404':
#       description: not found
#     '401':
#       description: not authorized
#     '403':
#       description: forbidden
#     '400':
#       description: bad request
###
#PATCH               /v1/locations                              de.innfactory.bootstrapplay2.locations.application.LocationController.update()

#POST               /graphql                              de.innfactory.bootstrapplay2.graphql.GraphQLController.graphql
#POST               /graphql/schema                              de.innfactory.bootstrapplay2.graphql.GraphQLController.renderSchema

# Map static resources from the /public folder to the /assets URL path
### NoDocs ###
#GET                 /assets/*file                                   controllers.Assets.versioned(path="/public", file: Asset)
### NoDocs ###
#GET                 /v1/assets/*file                                controllers.Assets.versioned(path="/public", file: Asset)